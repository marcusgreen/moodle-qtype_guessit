{"version":3,"file":"wordlenavigation.min.js","sources":["../src/wordlenavigation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript code for the guessit question type.\n *\n * @copyright  2025 Joseph RÃ©zeau\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @module qtype_guessit/wordlenavigation\n *\n * This script controls the navigation in the Wordle game.\n */\n\n/**\n * Initialize the input gaps functionalities.\n */\nexport function init() {\n\n    document.querySelectorAll('[id^=\"question-\"]').forEach(question => {\n        const gaps = question.querySelectorAll('input[type=\"text\"][name*=\"p\"]');\n        const checkButton = question.querySelector('button[type=\"submit\"].submit');\n\n        gaps.forEach((element, index) => {\n            // Empty the gap when clicked\n            element.addEventListener(\"click\", () => {\n                element.value = ''; // Empty the gap on click\n            });\n\n            // Listen for keydown to capture the key press and prevent more than one character\n            element.addEventListener(\"keydown\", (event) => {\n                // Allow only letters (A-Z, a-z)\n                if (!/^[a-zA-Z]$/.test(event.key)) {\n                    event.preventDefault();\n                }\n            });\n\n            element.addEventListener(\"input\", () => {\n                // Ensure only one character is allowed\n                if (element.value.length > 1) {\n                    element.value = element.value.charAt(0); // Keep only the first character\n                }\n                element.value = element.value.toUpperCase();\n                // Automatically move to the next input if a letter is typed\n                if (/^[a-zA-Z]$/.test(element.value)) {\n                    let nextIndex = index + 1;\n                    if (nextIndex < gaps.length) {\n                        // Clear the next gap if it's already filled\n                        if (gaps[nextIndex].value.trim() !== '') {\n                            gaps[nextIndex].value = '';\n                        }\n                        // Move focus to the next input field\n                        gaps[nextIndex].focus();\n                    } else if (checkButton) {\n                        // If it's the last gap, move focus to the \"Check\" button\n                        checkButton.focus();\n                    }\n                }\n            });\n        });\n    });\n}"],"names":["document","querySelectorAll","forEach","question","gaps","checkButton","querySelector","element","index","addEventListener","value","event","test","key","preventDefault","length","charAt","toUpperCase","nextIndex","trim","focus"],"mappings":";;;;;;;AA+BO,WAEHA,SAASC,iBAAiB,qBAAqBC,SAAQC,WACnD,MAAMC,KAAOD,SAASF,iBAAiB,iCACjCI,YAAcF,SAASG,cAAc,gCAE3CF,KAAKF,SAAQ,CAACK,QAASC,SAEnBD,QAAQE,iBAAiB,SAAS,KAC9BF,QAAQG,MAAQ,EAAE,IAItBH,QAAQE,iBAAiB,WAAYE,QAE5B,aAAaC,KAAKD,MAAME,MACzBF,MAAMG,gBACV,IAGJP,QAAQE,iBAAiB,SAAS,KAO9B,GALIF,QAAQG,MAAMK,OAAS,IACvBR,QAAQG,MAAQH,QAAQG,MAAMM,OAAO,IAEzCT,QAAQG,MAAQH,QAAQG,MAAMO,cAE1B,aAAaL,KAAKL,QAAQG,OAAQ,CAClC,IAAIQ,UAAYV,MAAQ,EACpBU,UAAYd,KAAKW,QAEoB,KAAjCX,KAAKc,WAAWR,MAAMS,SACtBf,KAAKc,WAAWR,MAAQ,IAG5BN,KAAKc,WAAWE,SACTf,aAEPA,YAAYe,OAEpB,IACF,GACJ,GAEV,CAAC"}